// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: file-service.proto

package protogen

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UploadStatus int32

const (
	UploadStatus_SUCCESS UploadStatus = 0
	UploadStatus_FAIL    UploadStatus = 1
)

// Enum value maps for UploadStatus.
var (
	UploadStatus_name = map[int32]string{
		0: "SUCCESS",
		1: "FAIL",
	}
	UploadStatus_value = map[string]int32{
		"SUCCESS": 0,
		"FAIL":    1,
	}
)

func (x UploadStatus) Enum() *UploadStatus {
	p := new(UploadStatus)
	*p = x
	return p
}

func (x UploadStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UploadStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_file_service_proto_enumTypes[0].Descriptor()
}

func (UploadStatus) Type() protoreflect.EnumType {
	return &file_file_service_proto_enumTypes[0]
}

func (x UploadStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UploadStatus.Descriptor instead.
func (UploadStatus) EnumDescriptor() ([]byte, []int) {
	return file_file_service_proto_rawDescGZIP(), []int{0}
}

type UploadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Chunk         []byte                 `protobuf:"bytes,1,opt,name=chunk,proto3" json:"chunk,omitempty"`
	Filename      string                 `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadRequest) Reset() {
	*x = UploadRequest{}
	mi := &file_file_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadRequest) ProtoMessage() {}

func (x *UploadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_file_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadRequest.ProtoReflect.Descriptor instead.
func (*UploadRequest) Descriptor() ([]byte, []int) {
	return file_file_service_proto_rawDescGZIP(), []int{0}
}

func (x *UploadRequest) GetChunk() []byte {
	if x != nil {
		return x.Chunk
	}
	return nil
}

func (x *UploadRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

type UploadReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        UploadStatus           `protobuf:"varint,1,opt,name=status,proto3,enum=UploadStatus" json:"status,omitempty"`
	Msg           string                 `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadReply) Reset() {
	*x = UploadReply{}
	mi := &file_file_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadReply) ProtoMessage() {}

func (x *UploadReply) ProtoReflect() protoreflect.Message {
	mi := &file_file_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadReply.ProtoReflect.Descriptor instead.
func (*UploadReply) Descriptor() ([]byte, []int) {
	return file_file_service_proto_rawDescGZIP(), []int{1}
}

func (x *UploadReply) GetStatus() UploadStatus {
	if x != nil {
		return x.Status
	}
	return UploadStatus_SUCCESS
}

func (x *UploadReply) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type PingRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PingRequest) Reset() {
	*x = PingRequest{}
	mi := &file_file_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingRequest) ProtoMessage() {}

func (x *PingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_file_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingRequest.ProtoReflect.Descriptor instead.
func (*PingRequest) Descriptor() ([]byte, []int) {
	return file_file_service_proto_rawDescGZIP(), []int{2}
}

type PingReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Msg           string                 `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PingReply) Reset() {
	*x = PingReply{}
	mi := &file_file_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PingReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingReply) ProtoMessage() {}

func (x *PingReply) ProtoReflect() protoreflect.Message {
	mi := &file_file_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingReply.ProtoReflect.Descriptor instead.
func (*PingReply) Descriptor() ([]byte, []int) {
	return file_file_service_proto_rawDescGZIP(), []int{3}
}

func (x *PingReply) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

var File_file_service_proto protoreflect.FileDescriptor

const file_file_service_proto_rawDesc = "" +
	"\n" +
	"\x12file-service.proto\"A\n" +
	"\rUploadRequest\x12\x14\n" +
	"\x05chunk\x18\x01 \x01(\fR\x05chunk\x12\x1a\n" +
	"\bfilename\x18\x02 \x01(\tR\bfilename\"F\n" +
	"\vUploadReply\x12%\n" +
	"\x06status\x18\x01 \x01(\x0e2\r.UploadStatusR\x06status\x12\x10\n" +
	"\x03msg\x18\x02 \x01(\tR\x03msg\"\r\n" +
	"\vPingRequest\"\x1d\n" +
	"\tPingReply\x12\x10\n" +
	"\x03msg\x18\x01 \x01(\tR\x03msg*%\n" +
	"\fUploadStatus\x12\v\n" +
	"\aSUCCESS\x10\x00\x12\b\n" +
	"\x04FAIL\x10\x012]\n" +
	"\vFileService\x12\"\n" +
	"\x04Ping\x12\f.PingRequest\x1a\n" +
	".PingReply\"\x00\x12*\n" +
	"\x06Upload\x12\x0e.UploadRequest\x1a\f.UploadReply\"\x00(\x01B\fZ\n" +
	"./protogenb\x06proto3"

var (
	file_file_service_proto_rawDescOnce sync.Once
	file_file_service_proto_rawDescData []byte
)

func file_file_service_proto_rawDescGZIP() []byte {
	file_file_service_proto_rawDescOnce.Do(func() {
		file_file_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_file_service_proto_rawDesc), len(file_file_service_proto_rawDesc)))
	})
	return file_file_service_proto_rawDescData
}

var file_file_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_file_service_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_file_service_proto_goTypes = []any{
	(UploadStatus)(0),     // 0: UploadStatus
	(*UploadRequest)(nil), // 1: UploadRequest
	(*UploadReply)(nil),   // 2: UploadReply
	(*PingRequest)(nil),   // 3: PingRequest
	(*PingReply)(nil),     // 4: PingReply
}
var file_file_service_proto_depIdxs = []int32{
	0, // 0: UploadReply.status:type_name -> UploadStatus
	3, // 1: FileService.Ping:input_type -> PingRequest
	1, // 2: FileService.Upload:input_type -> UploadRequest
	4, // 3: FileService.Ping:output_type -> PingReply
	2, // 4: FileService.Upload:output_type -> UploadReply
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_file_service_proto_init() }
func file_file_service_proto_init() {
	if File_file_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_file_service_proto_rawDesc), len(file_file_service_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_file_service_proto_goTypes,
		DependencyIndexes: file_file_service_proto_depIdxs,
		EnumInfos:         file_file_service_proto_enumTypes,
		MessageInfos:      file_file_service_proto_msgTypes,
	}.Build()
	File_file_service_proto = out.File
	file_file_service_proto_goTypes = nil
	file_file_service_proto_depIdxs = nil
}
